import os
from openai import OpenAI
from sqlalchemy.orm import Session
from models import SessionLocal, InterviewDB
from fastapi import HTTPException

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
client = OpenAI(api_key=OPENAI_API_KEY)


def generate_report(interview_id: str):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –∏–Ω—Ç–µ—Ä–≤—å—é –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.
    """
    session = SessionLocal()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏–Ω—Ç–µ—Ä–≤—å—é –∏–∑ –ë–î
    interview = session.query(InterviewDB).filter(InterviewDB.id == interview_id).first()

    if not interview:
        session.close()
        raise HTTPException(status_code=404, detail="–ò–Ω—Ç–µ—Ä–≤—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è OpenAI
    questions = interview.questions if interview.questions else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    answers = interview.answers if interview.answers else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

    prompt = f"""
–¢—ã ‚Äî AI-HR –≠–º–∏–ª–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º.

üìå **1. –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã**
- –í–æ–ø—Ä–æ—Å—ã: {questions}
- –û—Ç–≤–µ—Ç—ã: {answers}

üìå **2. –û—Ü–µ–Ω–∫–∞ Hard Skills**
- –û–ø—Ä–µ–¥–µ–ª–∏, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –≤–ª–∞–¥–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏.
- –ü—Ä–æ—Å—Ç–∞–≤—å –æ—Ü–µ–Ω–∫—É –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ –∏ –æ–±—ä—è—Å–Ω–∏.

üìå **3. –û—Ü–µ–Ω–∫–∞ Soft Skills**
- –û—Ü–µ–Ω–∏, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç —á—ë—Ç–∫–æ –∏–∑–ª–∞–≥–∞–µ—Ç –º—ã—Å–ª–∏.
- –û—Ü–µ–Ω–∏ —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (—Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å, –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ).

üìå **4. –ò—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç**
- –ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç? **–î–∞ / –ù–µ—Ç** (–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ).
- –ö–∞–∫–∏–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã?
- –ö–∞–∫–∏–µ –∑–æ–Ω—ã —Ä–æ—Å—Ç–∞?
"""

    try:
        response = client.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî AI-HR, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ."},
                {"role": "user", "content": prompt}
            ]
        )
        report_text = response.choices[0].message["content"]
    except Exception as e:
        session.close()
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞: {str(e)}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç –≤ –ë–î
    interview.report = report_text
    session.commit()
    session.close()

    return report_text
