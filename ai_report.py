import os
import json
from openai import OpenAI
from sqlalchemy.orm import Session
from database import SessionLocal  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from models import InterviewDB
from fastapi import HTTPException
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# API –∫–ª—é—á–∏
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
GOOGLE_SHEETS_CREDENTIALS = os.getenv("GOOGLE_SHEETS_CREDENTIALS")
SHEET_REPORTS = os.getenv("SHEET_REPORTS")
SHEET_EMOTIONS = os.getenv("SHEET_EMOTIONS")

client = OpenAI(api_key=OPENAI_API_KEY)


# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
def connect_google_sheets(sheet_name):
    if not GOOGLE_SHEETS_CREDENTIALS:
        raise HTTPException(status_code=500, detail="Google Sheets credentials –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")

    try:
        creds_dict = json.loads(GOOGLE_SHEETS_CREDENTIALS)
        creds = ServiceAccountCredentials.from_json_keyfile_dict(
            creds_dict,
            ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
        )
        client = gspread.authorize(creds)
        sheet = client.open(sheet_name).sheet1
        return sheet
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {str(e)}")


# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
def generate_report(interview_id: str):
    session = SessionLocal()
    try:
        interview = session.query(InterviewDB).filter(InterviewDB.id == interview_id).first()

        if not interview:
            raise HTTPException(status_code=404, detail="–ò–Ω—Ç–µ—Ä–≤—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        questions = interview.questions if interview.questions else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        answers = interview.answers if interview.answers else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"

        # üìå –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º—Ç–∞ –¥–ª—è OpenAI
        prompt = f"""
–¢—ã ‚Äî AI-HR –≠–º–∏–ª–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º.

üìå **1. –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ**
- –ö–∞–Ω–¥–∏–¥–∞—Ç ID: {interview.candidate_id}
- –í–æ–ø—Ä–æ—Å—ã: {questions}
- –û—Ç–≤–µ—Ç—ã: {answers}

üìå **2. –û—Ü–µ–Ω–∫–∞ Hard Skills**
- –ù–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –≤–ª–∞–¥–µ–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏?
- –ü—Ä–æ—Å—Ç–∞–≤—å –æ—Ü–µ–Ω–∫—É –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ –∏ –æ–±—ä—è—Å–Ω–∏.

üìå **3. –û—Ü–µ–Ω–∫–∞ Soft Skills**
- –ù–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç —á—ë—Ç–∫–æ –∏–∑–ª–∞–≥–∞–µ—Ç –º—ã—Å–ª–∏?
- –ö–∞–∫ –æ–Ω —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã?
- –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å, –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å.

üìå **4. –ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π –∏ —Ä–µ—á–∏**
- –ö–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏ –ø—Ä–µ–æ–±–ª–∞–¥–∞–ª–∏ –≤–æ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–≤—å—é?
- –î–∏–Ω–∞–º–∏–∫–∞ —ç–º–æ—Ü–∏–π: —Å—Ç–∞–ª –ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–º/—Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω—ã–º?
- –¢–µ–º–ø –∏ –≥—Ä–æ–º–∫–æ—Å—Ç—å —Ä–µ—á–∏: –∫–∞–∫ –º–µ–Ω—è–ª–∏—Å—å?
- –ë—ã–ª–∏ –ª–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤–æ–ª–Ω–µ–Ω–∏—è, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏?

üìå **5. –ò—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç**
- –ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç? **–î–∞ / –ù–µ—Ç** (–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ).
- –ö–∞–∫–∏–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã?
- –ö–∞–∫–∏–µ –∑–æ–Ω—ã —Ä–æ—Å—Ç–∞?
"""

        try:
            response = client.chat.completions.create(
                model="gpt-4o",
                messages=[
                    {"role": "system", "content": "–¢—ã ‚Äî AI-HR, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ."},
                    {"role": "user", "content": prompt}
                ]
            )
            report_text = response.choices[0].message.content
        except Exception as e:
            raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞: {str(e)}")

        # üìå –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç –≤ –ë–î
        interview.report = report_text
        session.commit()

        try:
            # üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ Google Sheets
            sheet_reports = connect_google_sheets(SHEET_REPORTS)
            sheet_reports.append_row([
                interview_id,
                interview.candidate_id,
                questions,
                answers,
                report_text
            ])

            # üìå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π –∏ —Ä–µ—á–∏
            prompt_emotions = f"""
–¢—ã ‚Äî AI-–∞–Ω–∞–ª–∏—Ç–∏–∫ —ç–º–æ—Ü–∏–π. –û–ø—Ä–µ–¥–µ–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤.

üìå **–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã**
- –í–æ–ø—Ä–æ—Å—ã: {questions}
- –û—Ç–≤–µ—Ç—ã: {answers}

1Ô∏è‚É£ –û–ø—Ä–µ–¥–µ–ª–∏ **–æ—Å–Ω–æ–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏** –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–≤—å—é.
2Ô∏è‚É£ –î–∏–Ω–∞–º–∏–∫–∞ —ç–º–æ—Ü–∏–π: —Å—Ç–∞–ª –ª–∏ –æ–Ω –±–æ–ª–µ–µ –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–º / —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω—ã–º?
3Ô∏è‚É£ –ö–∞–∫ –º–µ–Ω—è–ª–∏—Å—å **—Ç–µ–º–ø –∏ –≥—Ä–æ–º–∫–æ—Å—Ç—å —Ä–µ—á–∏**?
4Ô∏è‚É£ –ë—ã–ª–∏ –ª–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤–æ–ª–Ω–µ–Ω–∏—è, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏?
"""

            response_emotions = client.chat.completions.create(
                model="gpt-4o",
                messages=[{"role": "user", "content": prompt_emotions}]
            )
            emotions_analysis = response_emotions.choices[0].message.content

            # üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π –≤ Google Sheets
            sheet_emotions = connect_google_sheets(SHEET_EMOTIONS)
            sheet_emotions.append_row([
                interview_id,
                interview.candidate_id,
                emotions_analysis
            ])

        except Exception as e:
            session.rollback()
            raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {str(e)}")

    except Exception as e:
        session.rollback()
        raise HTTPException(status_code=500, detail=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ë–î: {str(e)}")
    finally:
        session.close()

    return report_text
