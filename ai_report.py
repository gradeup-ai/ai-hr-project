import os
from openai import OpenAI
from models import SessionLocal, InterviewDB
from fastapi import HTTPException

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç OpenAI
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def generate_report(interview_id: str):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç –ø–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ —Å –ø–æ–º–æ—â—å—é GPT-4o.
    """
    session = SessionLocal()
    interview = session.query(InterviewDB).filter(InterviewDB.id == interview_id).first()

    if not interview:
        session.close()
        raise HTTPException(status_code=404, detail="–ò–Ω—Ç–µ—Ä–≤—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á—ë—Ç
    prompt = f"""
–¢—ã ‚Äì AI-HR –≠–º–∏–ª–∏. –¢—ã –ø—Ä–æ–≤–æ–¥–∏—à—å –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º {interview.candidate_id}.
–¢–≤–æ—è —Ü–µ–ª—å ‚Äì –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å –µ–≥–æ Hard –∏ Soft Skills, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—è –µ–≥–æ –æ—Ç–≤–µ—Ç—ã.

üìå **1. –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã**  
- –í–æ–ø—Ä–æ—Å—ã: {interview.questions if interview.questions else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}  
- –û—Ç–≤–µ—Ç—ã: {interview.answers if interview.answers else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}  

üìå **2. –û—Ü–µ–Ω–∫–∞ Hard Skills**  
- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–π —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –≤–∞–∫–∞–Ω—Å–∏–∏.  
- –û—Ü–µ–Ω–∏ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ –∏ –æ–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É.  

üìå **3. –û—Ü–µ–Ω–∫–∞ Soft Skills**  
- –ù–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç —è—Å–Ω–æ –∏–∑–ª–∞–≥–∞–µ—Ç –º—ã—Å–ª–∏?  
- –ö–∞–∫ –æ–Ω —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã?  
- –û—Ü–µ–Ω–∏ —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ –∞–Ω–∞–ª–∏–∑—É.  

üìå **4. –ò—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç**  
- –ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç? **–î–∞ / –ù–µ—Ç** (–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ).  
- –ö–∞–∫–∏–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã?  
- –ö–∞–∫–∏–µ –∑–æ–Ω—ã —Ä–æ—Å—Ç–∞?  
"""

    response = client.completions.create(
        model="gpt-4o",
        messages=[{"role": "system", "content": "–¢—ã ‚Äì AI-HR, –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞."},
                  {"role": "user", "content": prompt}]
    )

    report_text = response.choices[0].message["content"]

    interview.report = report_text
    session.commit()
    session.close()

    return report_text
